.. _dunder0-0-video:

What Does if __name__ == "__main__" Mean in Python?
===================================================

https://realpython.com/courses/if-name-main-python/

Youâ€™ve likely encountered Pythonâ€™s if __name__ == "__main__" idiom when reading other peopleâ€™s code. You might have even used if __name__ == "__main__" in your own scripts. But did you use it correctly?

This line of code can seem a little cryptic, so donâ€™t fret if youâ€™re not completely sure what it does, why you might want it, and when to use it.

In this video course, youâ€™ll learn all about Pythonâ€™s if __name__ == "__main__" idiom.


What Does if __name__ == "__main__" Mean in Python? (Summary)
Arianne Dee
What Does if __name__ == "__main__" Mean in Python?
Arianne Dee  03:36


Contents
Transcript
Discussion (5)
Youâ€™ve learned what the if __name__ == "__main__" idiom does in Python. It allows you to write code that executes when you run the file as a script, but not when you import it as a module. Itâ€™s best to use it when you want to collect user input during a script run and avoid side effects when importing your moduleâ€”for example, to unit test its functions.

You also got to know some common but suboptimal use cases and learned about better and more idiomatic approaches that you can take in those scenarios. Maybe youâ€™ve accepted Pythonâ€™s name-main idiom after learning more about it, but if you still dislike it, then itâ€™s good to know that you can probably replace its use in most cases.

For further investigation, check out:

ðŸ“° How to Run Your Python Scripts
ðŸŽ¬ Running Python Scripts
ðŸ“° Python Modules and Packages â€“ An Introduction
ðŸŽ¬ Python Modules and Packages: An Introduction
ðŸ“° Defining Main Functions in Python
ðŸŽ¬ Defining Main Functions in Python
You can visit the following resources to lean more about testing in Python:

ðŸ“° Getting Started With Testing in Python
ðŸŽ¬ Test-Driven Development With pytest
These resources will help you document your projects with Python:

ðŸ“° Documenting Python Code: A Complete Guide
ðŸŽ¬ Documenting Python Code: A Complete Guide
ðŸ“° Pythonâ€™s doctest: Document and Test Your Code at Once
Maybe youâ€™d like to learn more about using the command line. Real Pythonâ€™s got you covered:

ðŸ“° Python Command-Line Arguments
ðŸŽ¬ Command Line Interfaces in Python
ðŸ“° Build Command-Line Interfaces With Pythonâ€™s argparse
ðŸŽ¬ Building Command Line Interfaces With argparse
When do you use the name-main idiom in your Python code? While working your way through this course, did you discover a way to replace it, or is there a good use case that we missed? Share your thoughts in the comments below.

